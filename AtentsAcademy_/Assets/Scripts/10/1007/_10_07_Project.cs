using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class _10_07_Project : MonoBehaviour
{
    /*
     프로그램 코드를 짜기 위해서는
     1. 구조를 어떻게 할 것인지를 설계
     2. 데이터관리
        파일에 데이터 저장하는 것을 전제(csv)
     3. 코드 재사용을 전제로 한 빠른 프로토 타입
        관리자클래스 : 리소스매니저, 인스턴스 매니저, 씬 이름 매니저, 테이블매니저(데이터관리)
        캐릭터 클래스 : 상태클래스는 별도, 다형성을 이용한 상속기반의 캐릭터 (클래스 개수를 고려한 설계 - 힙메모리 사용을 최소화)
                        캐릭터 종류가 여러개일 경우에 대한 설계 반영
                        인터페이스에 기반한 설계
                        다른 게임 오브젝트와의 상호작용을 위한 설계반영(충돌처리)
        몬스터 클래스 : 상태클래스는 별도, 다형성을 이용한 상속기반의 캐릭터 (클래스 개수를 고려한 설계 - 힙메모리 사용을 최소화)
                        캐릭터 종류가 여러개일 경우에 대한 설계 반영
                        인터페이스에 기반한 설계
                        다른 게임 오브젝트와의 상호작용을 위한 설계반영(충돌처리)

     
     
     */
    void Start()
    {
        
    }

    
    void Update()
    {
        
    }
}
